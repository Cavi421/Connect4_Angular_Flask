{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HelloWorldComponent = class HelloWorldComponent {\n  constructor(http) {\n    this.http = http;\n    this.matrix_board = [];\n    this.data_form = {\n      answer: '1'\n    };\n    //Token Class\n    this.tokens_to_add = [];\n  }\n  //Fill Matrix\n  ngOnInit() {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([]);\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n  }\n  //SEND REQUESTS METHOD\n  sendPostRequest(url, data) {\n    return this.http.post(url, data);\n  }\n  onSubmit() {\n    let api_url = \"http://localhost:5000\";\n    let post_data = {\n      \"data\": {\n        \"answer\": this.data_form.answer\n      },\n      \"matrix_board\": this.matrix_board\n    };\n    //SEND REQUEST TO FLASK\n    this.sendPostRequest(api_url, post_data).subscribe({\n      next: response => this.parseSuccess(response),\n      error: e => console.error(e),\n      complete: () => console.info(\"complete\")\n    });\n  }\n  parseSuccess(response) {\n    //CHECK HUMAN\n    //Check if token insertion is not successful\n    if (response.human.result == false) {\n      console.log(response.human.msg);\n      return false;\n    }\n    //Update board\n    this.matrix_board = response.human.matrix_board;\n    let token_to_add = {\n      \"color\": \"yellow\",\n      \"column\": response.human.last_move[1],\n      \"row\": response.human.last_move[0],\n      \"token_id\": response.human.token_id,\n      \"token_style\": {\n        margin: `${response.human.last_move[1] * 37} px`\n      }\n    };\n    this.tokens_to_add.push(token_to_add);\n    return true;\n  }\n};\nHelloWorldComponent = __decorate([Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})], HelloWorldComponent);","map":{"version":3,"names":["Component","HelloWorldComponent","constructor","http","matrix_board","data_form","answer","tokens_to_add","ngOnInit","row","push","column","sendPostRequest","url","data","post","onSubmit","api_url","post_data","subscribe","next","response","parseSuccess","error","e","console","complete","info","human","result","log","msg","token_to_add","last_move","token_id","margin","__decorate","selector","templateUrl","styleUrls"],"sources":["/code/angular_app/src/app/hello-world/hello-world.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\n\n\nexport class HelloWorldComponent implements OnInit {\n\n  matrix_board: number[][] = [];\n  data_form = { answer: '1' };\n\n  //Token Class\n  tokens_to_add: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  //Fill Matrix\n  ngOnInit(): void {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([])\n\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n  }\n\n\n  //SEND REQUESTS METHOD\n  sendPostRequest(url: string, data: any): Observable<Object> {\n    return this.http.post(url, data);\n  }\n\n\n\n  onSubmit() {\n\n    let api_url: string = \"http://localhost:5000\";\n    let post_data: any = {\n      \"data\": { \"answer\": this.data_form.answer },\n      \"matrix_board\": this.matrix_board\n    };\n\n    //SEND REQUEST TO FLASK\n    this.sendPostRequest(api_url, post_data).subscribe({\n\n      next: (response) => this.parseSuccess(response),\n      error: (e) => console.error(e),\n      complete: () => console.info(\"complete\")\n\n    })\n\n  }\n\n  parseSuccess(response: any): boolean {\n\n    //CHECK HUMAN\n    //Check if token insertion is not successful\n    if (response.human.result == false) {\n      console.log(response.human.msg);\n      return false\n    }\n\n\n    //Update board\n    this.matrix_board = response.human.matrix_board\n\n    let token_to_add = {\n      \"color\": \"yellow\",\n      \"column\": response.human.last_move[1],\n      \"row\": response.human.last_move[0],\n      \"token_id\": response.human.token_id,\n      \"token_style\": {\n        margin: `${response.human.last_move[1] * 37} px`\n      }\n    }\n\n    this.tokens_to_add.push(token_to_add)\n\n\n    return true\n\n\n\n\n\n\n\n\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAQ9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,YAAY,GAAe,EAAE;IAC7B,KAAAC,SAAS,GAAG;MAAEC,MAAM,EAAE;IAAG,CAAE;IAE3B;IACA,KAAAC,aAAa,GAAU,EAAE;EAEe;EAExC;EACAC,QAAQA,CAAA;IACN,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAChC,IAAI,CAACL,YAAY,CAACM,IAAI,CAAC,EAAE,CAAC;MAE1B,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,EAAEA,MAAM,EAAE,EAAE;QACzC,IAAI,CAACP,YAAY,CAACK,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;;;EAGpC;EAGA;EACAE,eAAeA,CAACC,GAAW,EAAEC,IAAS;IACpC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAACF,GAAG,EAAEC,IAAI,CAAC;EAClC;EAIAE,QAAQA,CAAA;IAEN,IAAIC,OAAO,GAAW,uBAAuB;IAC7C,IAAIC,SAAS,GAAQ;MACnB,MAAM,EAAE;QAAE,QAAQ,EAAE,IAAI,CAACb,SAAS,CAACC;MAAM,CAAE;MAC3C,cAAc,EAAE,IAAI,CAACF;KACtB;IAED;IACA,IAAI,CAACQ,eAAe,CAACK,OAAO,EAAEC,SAAS,CAAC,CAACC,SAAS,CAAC;MAEjDC,IAAI,EAAGC,QAAQ,IAAK,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC;MAC/CE,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC,CAAC;MAC9BE,QAAQ,EAAEA,CAAA,KAAMD,OAAO,CAACE,IAAI,CAAC,UAAU;KAExC,CAAC;EAEJ;EAEAL,YAAYA,CAACD,QAAa;IAExB;IACA;IACA,IAAIA,QAAQ,CAACO,KAAK,CAACC,MAAM,IAAI,KAAK,EAAE;MAClCJ,OAAO,CAACK,GAAG,CAACT,QAAQ,CAACO,KAAK,CAACG,GAAG,CAAC;MAC/B,OAAO,KAAK;;IAId;IACA,IAAI,CAAC3B,YAAY,GAAGiB,QAAQ,CAACO,KAAK,CAACxB,YAAY;IAE/C,IAAI4B,YAAY,GAAG;MACjB,OAAO,EAAE,QAAQ;MACjB,QAAQ,EAAEX,QAAQ,CAACO,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC;MACrC,KAAK,EAAEZ,QAAQ,CAACO,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC;MAClC,UAAU,EAAEZ,QAAQ,CAACO,KAAK,CAACM,QAAQ;MACnC,aAAa,EAAE;QACbC,MAAM,EAAE,GAAGd,QAAQ,CAACO,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;;KAE9C;IAED,IAAI,CAAC1B,aAAa,CAACG,IAAI,CAACsB,YAAY,CAAC;IAGrC,OAAO,IAAI;EASb;CAED;AArFY/B,mBAAmB,GAAAmC,UAAA,EAP/BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EAGWtC,mBAAmB,CAqF/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}