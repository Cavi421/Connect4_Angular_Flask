{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HelloWorldComponent {\n  ngOnInit() {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([]);\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n    console.log(\"ON INIT\");\n  }\n  constructor(http) {\n    this.http = http;\n    this.title = \"Hello\";\n    this.matrix_board = [];\n    this.api_url = \"http://localhost:5000\";\n    this.post_data = {\n      \"data\": {\n        \"answer\": 1\n      },\n      \"matrix_board\": this.matrix_board\n    };\n  }\n  sendPostRequest(url, data) {\n    return this.http.post(url, this.post_data);\n  }\n  sendReqFlask() {\n    this.sendPostRequest(this.api_url, this.post_data).subscribe(response => {\n      console.log('Success!', response);\n      //Update Matrix\n      let response_data = Object.values(response);\n      console.log(response_data[0][\"matrix_board\"]);\n      this.post_data[\"matrix_board\"] = response_data[0][\"matrix_board\"];\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  static #_ = this.ɵfac = function HelloWorldComponent_Factory(t) {\n    return new (t || HelloWorldComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HelloWorldComponent,\n    selectors: [[\"app-hello-world\"]],\n    decls: 30,\n    vars: 0,\n    consts: [[\"id\", \"info_msg\", 1, \"info\"], [\"id\", \"column_form\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"1\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"2\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"3\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"4\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"5\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"6\"], [\"type\", \"radio\", \"name\", \"answer\", \"value\", \"7\"], [\"type\", \"button\", \"value\", \"Submit\", \"id\", \"submit_button\", 3, \"(submit)\"], [\"id\", \"game-base\"], [\"id\", \"game-table\"]],\n    template: function HelloWorldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Connect Four Game\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h2\", 0);\n        i0.ɵɵtext(3, \"Select a column where to place the token\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 1)(5, \"label\");\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵtext(7, \" 1st \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵtext(10, \" 2nd \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"label\");\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵtext(13, \" 3rd \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\");\n        i0.ɵɵelement(15, \"input\", 5);\n        i0.ɵɵtext(16, \" 4th \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵtext(19, \" 5th \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"label\");\n        i0.ɵɵelement(21, \"input\", 7);\n        i0.ɵɵtext(22, \" 6th \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\");\n        i0.ɵɵelement(24, \"input\", 8);\n        i0.ɵɵtext(25, \" 7th \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"input\", 9);\n        i0.ɵɵlistener(\"(submit)\", function HelloWorldComponent_Template_input__submit__27_listener() {\n          return ctx.sendReqFlask();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 10);\n        i0.ɵɵelement(29, \"div\", 11);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HelloWorldComponent","ngOnInit","row","matrix_board","push","column","console","log","constructor","http","title","api_url","post_data","sendPostRequest","url","data","post","sendReqFlask","subscribe","response","response_data","Object","values","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","HelloWorldComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HelloWorldComponent_Template_input__submit__27_listener"],"sources":["/code/angular_app/src/app/hello-world/hello-world.component.ts","/code/angular_app/src/app/hello-world/hello-world.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\n\n\nexport class HelloWorldComponent implements OnInit {\n\n  title: string = \"Hello\";\n  matrix_board: number[][] = [];\n\n\n  ngOnInit(): void {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([])\n\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n\n    console.log(\"ON INIT\")\n  }\n\n  constructor(private http: HttpClient) { }\n\n  api_url: string = \"http://localhost:5000\";\n  post_data: any = {\n    \"data\": { \"answer\": 1 },\n    \"matrix_board\": this.matrix_board\n  };\n\n\n  sendPostRequest(url: string, data: any): Observable<Object> {\n    return this.http.post(url, this.post_data);\n  }\n\n  sendReqFlask() {\n    this.sendPostRequest(this.api_url, this.post_data).subscribe(\n      (response: Object) => {\n        console.log('Success!', response);\n\n        //Update Matrix\n        let response_data = Object.values(response);\n\n        console.log(response_data[0][\"matrix_board\"])\n\n        this.post_data[\"matrix_board\"] = response_data[0][\"matrix_board\"]\n\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    )\n\n  }\n}\n","<h1>Connect Four Game</h1>\r\n\r\n<h2 class=\"info\" id=\"info_msg\">Select a column where to place the token</h2>\r\n<form id=\"column_form\">\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"1\"> 1st\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"2\"> 2nd\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"3\"> 3rd\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"4\"> 4th\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"5\"> 5th\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"6\"> 6th\r\n    </label>\r\n    <label>\r\n        <input type=\"radio\" name=\"answer\" value=\"7\"> 7th\r\n    </label><br>\r\n    <input type=\"button\" value=\"Submit\" id=\"submit_button\" ((submit))=\"sendReqFlask()\">\r\n</form>\r\n<div id=\"game-base\">\r\n    <div id=\"game-table\">\r\n\r\n        <!--<div id=\"1\" class=\"disc red\"></div>-->\r\n\r\n    </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}