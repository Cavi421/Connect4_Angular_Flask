{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HelloWorldComponent {\n  ngOnInit() {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([]);\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n    console.log(\"ON INIT\");\n  }\n  constructor(http) {\n    this.http = http;\n    this.title = \"Hello\";\n    this.matrix_board = [];\n    this.api_url = \"http://localhost:5000\";\n    this.post_data = {\n      \"data\": {\n        \"answer\": 1\n      },\n      \"matrix_board\": this.matrix_board\n    };\n  }\n  sendPostRequest(url, data) {\n    return this.http.post(url, this.post_data);\n  }\n  sendReqFlask() {\n    this.sendPostRequest(this.api_url, this.post_data).subscribe(response => {\n      console.log('Success!', response);\n      //Update Matrix\n      let response_data = Object.values(response);\n      console.log(response_data[0][\"matrix_board\"]);\n      this.matrix_board = response_data[0][\"matrix_board\"];\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  static #_ = this.ɵfac = function HelloWorldComponent_Factory(t) {\n    return new (t || HelloWorldComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HelloWorldComponent,\n    selectors: [[\"app-hello-world\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"type\", \"button\", 3, \"click\"]],\n    template: function HelloWorldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function HelloWorldComponent_Template_button_click_0_listener() {\n          return ctx.sendReqFlask();\n        });\n        i0.ɵɵtext(1, \"Try\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HelloWorldComponent","ngOnInit","row","matrix_board","push","column","console","log","constructor","http","title","api_url","post_data","sendPostRequest","url","data","post","sendReqFlask","subscribe","response","response_data","Object","values","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","HelloWorldComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","HelloWorldComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd"],"sources":["/code/angular_app/src/app/hello-world/hello-world.component.ts","/code/angular_app/src/app/hello-world/hello-world.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\n\n\nexport class HelloWorldComponent implements OnInit {\n\n  title: string = \"Hello\";\n  matrix_board: number[][] = [];\n\n\n  ngOnInit(): void {\n    for (let row = 0; row < 6; row++) {\n      this.matrix_board.push([])\n\n      for (let column = 0; column < 7; column++) {\n        this.matrix_board[row].push(0);\n      }\n    }\n\n    console.log(\"ON INIT\")\n  }\n\n  constructor(private http: HttpClient) { }\n\n  api_url: string = \"http://localhost:5000\";\n  post_data: any = {\n    \"data\": { \"answer\": 1 },\n    \"matrix_board\": this.matrix_board\n  };\n\n  sendPostRequest(url: string, data: any): Observable<Object> {\n    return this.http.post(url, this.post_data);\n  }\n\n  sendReqFlask() {\n    this.sendPostRequest(this.api_url, this.post_data).subscribe(\n      (response: Object) => {\n        console.log('Success!', response);\n\n        //Update Matrix\n        let response_data = Object.values(response);\n\n        console.log(response_data[0][\"matrix_board\"])\n\n        this.matrix_board = response_data[0][\"matrix_board\"]\n\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    )\n\n  }\n}\n","<button type=\"button\" (click)=\"sendReqFlask()\">Try</button>"],"mappings":";;AAYA,OAAM,MAAOA,mBAAmB;EAM9BC,QAAQA,CAAA;IACN,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;MAChC,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,EAAE,CAAC;MAE1B,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,EAAEA,MAAM,EAAE,EAAE;QACzC,IAAI,CAACF,YAAY,CAACD,GAAG,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;;;IAIlCE,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAhBxB,KAAAC,KAAK,GAAW,OAAO;IACvB,KAAAP,YAAY,GAAe,EAAE;IAiB7B,KAAAQ,OAAO,GAAW,uBAAuB;IACzC,KAAAC,SAAS,GAAQ;MACf,MAAM,EAAE;QAAE,QAAQ,EAAE;MAAC,CAAE;MACvB,cAAc,EAAE,IAAI,CAACT;KACtB;EANuC;EAQxCU,eAAeA,CAACC,GAAW,EAAEC,IAAS;IACpC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACF,GAAG,EAAE,IAAI,CAACF,SAAS,CAAC;EAC5C;EAEAK,YAAYA,CAAA;IACV,IAAI,CAACJ,eAAe,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACC,SAAS,CAAC,CAACM,SAAS,CACzDC,QAAgB,IAAI;MACnBb,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEY,QAAQ,CAAC;MAEjC;MACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC;MAE3Cb,OAAO,CAACC,GAAG,CAACa,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;MAE7C,IAAI,CAACjB,YAAY,GAAGiB,aAAa,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;IAEtD,CAAC,EACAG,KAAK,IAAI;MACRjB,OAAO,CAACiB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EAEH;EAAC,QAAAC,CAAA,G;qBAhDUxB,mBAAmB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB7B,mBAAmB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZhCX,EAAA,CAAAa,cAAA,gBAA+C;QAAzBb,EAAA,CAAAc,UAAA,mBAAAC,qDAAA;UAAA,OAASH,GAAA,CAAApB,YAAA,EAAc;QAAA,EAAC;QAACQ,EAAA,CAAAgB,MAAA,UAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}